import os

# File with the list of duplicates generated by the first script
duplicates_file = "duplicates.txt"

# Validate if the duplicates file exists
if not os.path.isfile(duplicates_file):
    print(f"Error: The file '{duplicates_file}' does not exist.")
    exit(1)

with open(duplicates_file, "r") as f:
    lines = f.readlines()

current_hash = None
original_file = None
duplicates_to_delete = []

# Variables for statistics
total_files_deleted = 0
total_space_freed = 0  # in bytes

# Function to get the file size
def get_file_size(filepath):
    try:
        return os.path.getsize(filepath)
    except FileNotFoundError:
        print(f"Error: The file '{filepath}' was not found.")
        return 0
    except PermissionError:
        print(f"Error: Permission denied to access '{filepath}'.")
        return 0
    except Exception as e:
        print(f"Unexpected error when accessing '{filepath}': {e}")
        return 0

# Process each line in the duplicates file
for line in lines:
    line = line.strip()
    if line.endswith(":"):  # New group of duplicates
        # If there are duplicates to delete, delete them
        if duplicates_to_delete:
            for duplicate in duplicates_to_delete:
                if os.path.isfile(duplicate):  # Validate if the file exists before trying to delete
                    try:
                        # Get the size of the duplicate before deleting
                        duplicate_size = get_file_size(duplicate)
                        os.remove(duplicate)
                        total_files_deleted += 1
                        total_space_freed += duplicate_size
                        print(f"Deleted duplicate: {duplicate} ({duplicate_size / (1024 * 1024):.2f} MB)")
                    except PermissionError:
                        print(f"Error: Permission denied to delete {duplicate}")
                    except Exception as e:
                        print(f"Could not delete {duplicate}: {e}")
                else:
                    print(f"Warning: The file '{duplicate}' does not exist or is not accessible.")

        # Reset for the next group of duplicates
        current_hash = line[:-1]
        original_file = None
        duplicates_to_delete = []
    elif line:  # It's a file path
        if not original_file:
            # The first path is the original file
            original_file = line
        else:
            # Add to the list of files to delete
            duplicates_to_delete.append(line)

# Delete the last group of duplicates
if duplicates_to_delete:
    for duplicate in duplicates_to_delete:
        if os.path.isfile(duplicate):  # Validate if the file exists before trying to delete
            try:
                # Get the size of the duplicate before deleting
                duplicate_size = get_file_size(duplicate)
                os.remove(duplicate)
                total_files_deleted += 1
                total_space_freed += duplicate_size
                print(f"Deleted duplicate: {duplicate} ({duplicate_size / (1024 * 1024):.2f} MB)")
            except PermissionError:
                print(f"Error: Permission denied to delete {duplicate}")
            except Exception as e:
                print(f"Could not delete {duplicate}: {e}")
        else:
            print(f"Warning: The file '{duplicate}' does not exist or is not accessible.")

# Print out statistics
print("\nStatistics:")
print(f"Total duplicates deleted: {total_files_deleted}")
print(f"Total space freed: {total_space_freed / (1024 * 1024):.2f} MB")